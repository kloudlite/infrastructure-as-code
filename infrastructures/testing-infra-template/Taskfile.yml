version: 3

vars:
  Varsfile: ".secrets/varfile.json"

dotenv:
  - .secrets/env

tasks:
  create-diff-patch:
    vars:
      bundleName:
        sh: ls ../../terraform/bundles | fzf
    cmds:
      - |+
        diff -u ../../terraform/bundles/{{.bundleName}}/variables.tf ./variables-{{.bundleName}}.tf > ./variables-{{.bundleName}}.tf.diff.patch
        exit 0

  sync-variables:
    vars:
      banner: |+
        /*
        DO NOT EDIT THIS FILE DIRECTLY. IT WILL BE OVERWRITTEN.
        If you need to change any variable, please edit the corresponding variables in the terraform/bundles directory.
        If you want to create new variables, please create them in other files
        */
    env:
      bundleNames: "kl-master-nodes-on-aws kl-worker-nodes-on-aws"
    cmds:
      - |+
        for bundleName in $bundleNames; do
          echo $bundleName
          bundlePath="../../terraform/bundles/$bundleName"
          if [ -f "./variables-$bundleName.tf" ]; then
            chmod 600 "./variables-$bundleName.tf"
          fi
          if [ -d "$bundlePath" ]; then
            patchFile="./variables-$bundleName.tf.diff.patch"
            if [ -f "$patchFile" ]; then
              patch $bundlePath/variables.tf  < ./variables-$bundleName.tf.diff.patch --output=- > ./variables-$bundleName.tf
            else 
              cat > "./variables-$bundleName.tf" <<EOF
        {{.banner}}
        EOF
              cat $bundlePath/variables.tf >> ./variables-$bundleName.tf
            fi
            chmod 400 "./variables-$bundleName.tf"
          fi
        done

  init:
    cmds:
      - terraform init
    silent: true

  plan:
    dir: ./
    vars:
      PlanOutput: ".secrets/plan.out"
    cmds:
      - cat ./varfile.template.yml | envsubst | yq > {{.Varsfile}}
      - terraform plan --var-file "{{.Varsfile}}" --out "{{.PlanOutput}}"

  apply:
    dir: ./
    dotenv:
      - .secrets/env
    vars:
      PlanOutput: ".secrets/plan.out"
    cmds:
      - terraform apply "{{.PlanOutput}}"

  validate:
    dir: ./
    cmds:
      - terraform validate  -var-file={{.Varsfile}}

  destroy:
    dir: ./
    dotenv:
      - .secrets/env
    vars:
      PlanOutput: ".secrets/plan.destroy.out"
    cmds:
      - cat ./varfile.template.yml | envsubst | yq > {{.Varsfile}}
      - terraform plan --var-file={{.Varsfile}} --destroy --out "{{.PlanOutput}}"
      - terraform apply "{{.PlanOutput}}"
